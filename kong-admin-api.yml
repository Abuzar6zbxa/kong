info:
  title: Kong Admin API
  summary: Kong RESTful Admin API for administration purposes.
  license:
    url: https://github.com/Kong/kong/blob/master/LICENSE
    name: Apache 2.0
  version: 3.3.0
  description: "       {{site.base_gateway}} comes with an **internal** RESTful Admin
    API for administration purposes.\n        Requests to the Admin API can be sent
    to any node in the cluster, and Kong will\n        keep the configuration consistent
    across all nodes.\n\n        - `8001` is the default port on which the Admin API
    listens.\n        - `8444` is the default port for HTTPS traffic to the Admin
    API.\n\n        This API is designed for internal use and provides full control
    over Kong, so\n        care should be taken when setting up Kong environments
    to avoid undue public\n        exposure of this API. See [this document][secure-admin-api]
    for a discussion\n        of methods to secure the Admin API.\n      "
  contact:
    url: https://github.com/Kong/kong
    name: Kong
paths:
  /certificates/{certificates}:
    patch:
      description: This method is not available when using DB-less mode.
    get: []
    put:
      description: This method is not available when using DB-less mode.
  /certificates/{certificates}/snis: []
  /certificates/{certificates}/snis/{snis}: []
  /endpoints:
    get:
      summary: List available endpoints
  /cache:
    delete:
      description: This method is not available when using DB-less mode.
  /plugins/schema/{name}:
    get: []
  /schemas/{db_entity_name}/validate:
    post:
      summary: Validate a configuration against a schema
      description: This method is not available when using DB-less mode.
  /plugins/{plugins}:
    patch:
      description: This method is not available when using DB-less mode.
  /targets/{targets}/upstream: []
  /plugins:
    post:
      description: This method is not available when using DB-less mode.
  /schemas/{name}:
    get:
      summary: Retrieve Entity Schema
  /upstreams/{upstreams}/targets/{targets}/{address}/healthy:
    put:
      summary: Set target address as healthy
      description: This method is not available when using DB-less mode.
  /services/{services}/plugins:
    post:
      description: This method is not available when using DB-less mode.
  /upstreams/{upstreams}/targets/{targets}/healthy:
    put:
      summary: Set target as healthy
      description: This method is not available when using DB-less mode.
  /upstreams/{upstreams}/targets/{targets}/{address}/unhealthy:
    put:
      summary: Set target address as unhealthy
      description: This method is not available when using DB-less mode.
  /routes/{routes}/plugins:
    post:
      description: This method is not available when using DB-less mode.
  /schemas/plugins/{name}:
    get:
      summary: Retrieve Plugin Schema
  /targets/{targets}: []
  /upstreams/{upstreams}/targets:
    get: []
    post:
      description: This method is not available when using DB-less mode.
  /upstreams/{upstreams}/targets/{targets}:
    patch:
      summary: Update Target
      description: This method is not available when using DB-less mode.
    delete:
      summary: Delete Target
      description: This method is not available when using DB-less mode.
    get: []
    put:
      description: This method is not available when using DB-less mode.
  /targets: []
  /schemas/plugins/validate:
    post:
      summary: Validate a plugin configuration against the schema
      description: This method is not available when using DB-less mode.
  /clustering/status: []
  /upstreams/{upstreams}/targets/all:
    get:
      summary: List all Targets
  /debug/cluster/log-level/{log_level}:
    put:
      summary: Set node log level of all nodes
      description: This method is not available when using DB-less mode.
  /config:
    get:
      description: This method is only available when using DB-less mode.
    post:
      description: This method is only available when using DB-less mode.
  /upstreams/{upstreams}/targets/{targets}/unhealthy:
    put:
      summary: Set target as unhealthy
      description: This method is not available when using DB-less mode.
  /consumers:
    get: []
  /tags/{tags}:
    get:
      summary: ' List entity IDs by tag '
  /status:
    get:
      summary: Retrieve node status
  /:
    get:
      summary: Retrieve node information
  /cache/{key}:
    get: []
    delete:
      description: This method is not available when using DB-less mode.
  /snis/{snis}/certificate: []
  /debug/node/log-level/{log_level}:
    put:
      summary: Set log level of a single node
      description: This method is not available when using DB-less mode.
  /routes/{routes}/plugins/{plugins}:
    patch:
      description: This method is not available when using DB-less mode.
  /services/{services}/plugins/{plugins}:
    patch:
      description: This method is not available when using DB-less mode.
  /consumers/{consumers}/plugins:
    post:
      description: This method is not available when using DB-less mode.
  /consumers/{consumers}/plugins/{plugins}:
    patch:
      description: This method is not available when using DB-less mode.
  /debug/node/log-level:
    get:
      summary: Retrieve node log level of a node
  /plugins/enabled:
    get:
      summary: Retrieve Enabled Plugins
  /clustering/data-planes: []
  /upstreams/{upstreams}/health:
    get:
      summary: Show Upstream health for node
  /timers:
    get:
      summary: Retrieve runtime debugging info of Kong's timers
servers:
- url: http://localhost:8001
  description: 8001 is the default port on which the Admin API listens.
- url: https://localhost:8444
  description: 8444 is the default port for HTTPS traffic to the Admin API.
openapi: 3.1.0
components:
  schemas:
    keys:
      required:
      - kid
      properties:
        jwk:
          type: string
        pem: []
        name:
          type: string
        created_at:
          format: int32
          type: integer
        tags:
          type: array
        set:
          $ref: '#/components/schemas/key_sets'
        kid:
          type: string
        updated_at:
          format: int32
          type: integer
        id:
          format: uuid
          type: string
      type: object
    key_sets:
      required: []
      properties:
        updated_at:
          format: int32
          type: integer
        id:
          format: uuid
          type: string
        name:
          type: string
        created_at:
          format: int32
          type: integer
        tags:
          type: array
      type: object
    clustering_data_planes:
      required:
      - id
      - ip
      - hostname
      - sync_status
      properties:
        ip:
          type: string
        version:
          type: string
        id:
          type: string
        hostname:
          type: string
        last_seen:
          format: int32
          type: integer
        config_hash:
          type: string
        sync_status:
          default: unknown
          type: string
        updated_at:
          format: int32
          type: integer
      type: object
    workspaces:
      required:
      - name
      properties:
        meta:
          type: array
        comment:
          type: string
        config:
          type: array
        updated_at:
          format: int32
          type: integer
        name:
          type: string
        created_at:
          format: int32
          type: integer
        id:
          format: uuid
          type: string
      type: object
    parameters:
      required:
      - key
      - value
      properties:
        value:
          type: string
        created_at:
          format: int32
          type: integer
        key:
          type: string
      type: object
    routes:
      required:
      - protocols
      - https_redirect_status_code
      - strip_path
      - preserve_host
      - request_buffering
      - response_buffering
      properties:
        hosts:
          type: array
        methods:
          type: array
        paths: []
        protocols:
          default:
          - http
          - https
          type: array
        response_buffering:
          default: true
          type: boolean
        sources:
          type: array
        service:
          $ref: '#/components/schemas/services'
        tags:
          type: array
        https_redirect_status_code:
          default: 426
          type: integer
        snis:
          type: array
        headers:
          type: array
        name:
          type: string
        created_at:
          format: int32
          type: integer
        id:
          format: uuid
          type: string
        regex_priority:
          default: 0
          type: integer
        updated_at:
          format: int32
          type: integer
        preserve_host:
          default: false
          type: boolean
        strip_path:
          default: true
          type: boolean
        destinations:
          type: array
        path_handling:
          default: v0
          type: string
        request_buffering:
          default: true
          type: boolean
      type: object
    services:
      required:
      - protocol
      - host
      - port
      - enabled
      properties:
        path:
          type: string
        retries:
          default: 5
          type: integer
        connect_timeout:
          default: 60000
          type: integer
        write_timeout:
          default: 60000
          type: integer
        read_timeout:
          default: 60000
          type: integer
        client_certificate:
          $ref: '#/components/schemas/certificates'
        tls_verify:
          type: boolean
        tls_verify_depth:
          default: ~
          nullable: true
          type: integer
        enabled:
          default: true
          type: boolean
        host:
          type: string
        name:
          type: string
        created_at:
          format: int32
          type: integer
        id:
          format: uuid
          type: string
        protocol:
          default: http
          type: string
        ca_certificates:
          type: array
        updated_at:
          format: int32
          type: integer
        tags:
          type: array
        port:
          default: 80
          type: integer
      type: object
    tags:
      required:
      - tag
      - entity_name
      - entity_id
      properties:
        entity_name:
          type: string
        tag:
          type: string
        entity_id:
          type: string
      type: object
    consumers:
      required: []
      properties:
        tags:
          type: array
        custom_id:
          type: string
        username:
          type: string
        id:
          format: uuid
          type: string
        created_at:
          format: int32
          type: integer
        updated_at:
          format: int32
          type: integer
      type: object
    plugins:
      required:
      - name
      - protocols
      - enabled
      properties:
        route:
          default: ~
          nullable: true
          $ref: '#/components/schemas/routes'
        protocols:
          default:
          - grpc
          - grpcs
          - http
          - https
          enum:
          - http
          - https
          - tcp
          - tls
          - udp
          - grpc
          - grpcs
          type: array
        consumer:
          default: ~
          nullable: true
          $ref: '#/components/schemas/consumers'
        name:
          type: string
        service:
          default: ~
          nullable: true
          $ref: '#/components/schemas/services'
        updated_at:
          format: int32
          type: integer
        tags:
          type: array
        enabled:
          default: true
          type: boolean
        config:
          type: array
        id:
          format: uuid
          type: string
        created_at:
          format: int32
          type: integer
        instance_name:
          type: string
      type: object
    certificates:
      required:
      - cert
      - key
      properties:
        key_alt:
          type: string
        cert:
          type: string
        tags:
          type: array
        cert_alt:
          type: string
        key:
          type: string
        id:
          format: uuid
          type: string
        created_at:
          format: int32
          type: integer
        updated_at:
          format: int32
          type: integer
      type: object
    ca_certificates:
      required:
      - cert
      properties:
        cert:
          type: string
        cert_digest:
          type: string
        tags:
          type: array
        id:
          format: uuid
          type: string
        created_at:
          format: int32
          type: integer
        updated_at:
          format: int32
          type: integer
      type: object
    snis:
      required:
      - name
      - certificate
      properties:
        tags:
          type: array
        certificate:
          $ref: '#/components/schemas/certificates'
        id:
          format: uuid
          type: string
        name:
          type: string
        created_at:
          format: int32
          type: integer
        updated_at:
          format: int32
          type: integer
      type: object
    upstreams:
      required:
      - name
      properties:
        hash_fallback_query_arg:
          type: string
        hash_on_uri_capture:
          type: string
        hash_fallback_uri_capture:
          type: string
        tags:
          type: array
        use_srv_name:
          default: false
          type: boolean
        client_certificate:
          $ref: '#/components/schemas/certificates'
        slots:
          default: 10000
          type: integer
        algorithm:
          default: round-robin
          type: string
        hash_on:
          default: none
          type: string
        host_header:
          type: string
        hash_fallback:
          default: none
          type: string
        created_at:
          format: int32
          type: integer
        hash_on_header:
          type: string
        healthchecks:
          default:
            active:
              unhealthy:
                tcp_failures: 0
                timeouts: 0
                http_failures: 0
                http_statuses:
                - 429
                - 404
                - 500
                - 501
                - 502
                - 503
                - 504
                - 505
                interval: 0
              timeout: 1
              concurrency: 10
              https_verify_certificate: true
              http_path: /
              healthy:
                successes: 0
                interval: 0
                http_statuses:
                - 200
                - 302
              type: http
            passive:
              unhealthy:
                http_failures: 0
                timeouts: 0
                tcp_failures: 0
                http_statuses:
                - 429
                - 500
                - 503
              healthy:
                successes: 0
                http_statuses:
                - 200
                - 201
                - 202
                - 203
                - 204
                - 205
                - 206
                - 207
                - 208
                - 226
                - 300
                - 301
                - 302
                - 303
                - 304
                - 305
                - 306
                - 307
                - 308
              type: http
          type: array
        hash_fallback_header:
          type: string
        id:
          format: uuid
          type: string
        hash_on_cookie:
          type: string
        name:
          type: string
        hash_on_cookie_path:
          default: /
          type: string
        updated_at:
          format: int32
          type: integer
        hash_on_query_arg:
          type: string
      type: object
    targets:
      required:
      - upstream
      - target
      properties:
        tags:
          type: array
        weight:
          default: 100
          type: integer
        target:
          type: string
        id:
          format: uuid
          type: string
        created_at:
          format: float
          type: number
        upstream:
          $ref: '#/components/schemas/upstreams'
        updated_at:
          format: float
          type: number
      type: object
    vaults:
      required:
      - prefix
      - name
      properties:
        tags:
          type: array
        updated_at:
          format: int32
          type: integer
        created_at:
          format: int32
          type: integer
        name:
          type: string
        prefix:
          type: string
        description:
          type: string
        config:
          type: array
        id:
          format: uuid
          type: string
      type: object
